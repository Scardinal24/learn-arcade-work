1. Write code to swap the values 25 and 40.

def swapNum(my_list, pos8, pos7):
    my_list[pos8], my_list[pos7] = my_list[pos7], my_list[pos8]
    return my_list

my_list = [55, 41, 52, 68, 45, 27, 40, 25, 37, 26]
pos8, pos7 = 25, 40

print(my_list)

2. Write code to swap the values 2 and 27.

def swapNum(my_list, pos4, pos1):
    my_list[pos4], my_list[pos1] = my_list[pos1], my_list[pos4]
    return my_list

my_list = [27, 32, 18,  2, 11, 57, 14, 38, 19, 91]
pos4, pos1 = 25, 40

print(my_list)

3. Why does the following code not work? Explain it, don't just list working code.

my_list = [70, 32, 98, 88, 92, 36, 81, 83, 87, 66]
temp = my_list[0]
my_list[1] = my_list[0]
my_list[0] = temp

You have to switch my_list[0] and my_list[1]. You have to say x = y and not y = x.
It might give you an error that says "y doesn't have a value or isn't defined" or
something along those lines.

4. Show how the following numbers can be sorted using the selection sort.
Show the numbers after each iteration of the outer loop, similar to what is shown in the book.
I am NOT looking for a copy of the code to do the sort.
If you include any code for problems 4-7 you are doing it wrong.

97   74    8   98   47   62   12   11    0   60
8    74   97   98   47   62   12   11    0   60
8    97   74   98   47   62   12   11    0   60
8    97   98   74   47   62   12   11    0   60
8    97   98   12   47   62   74   11    0   60
8    97   98   12   60   62   74   11    0   47
8    97   98   12   60   0    74   11   62   47
8    97   98   12   60   0    11   74   62   47
8    97   98   12   60   0    11   74   62   47
8    97   98   12   60   0    11   74   47   62
8    97   98   12   60   0    11   74   47   62

5. Show how the following numbers can be sorted using the selection sort:

74   92   18   47   40   58    0   36   29   25
18   92   74   47   40   58    0   36   29   25
18   74   92   47   40   58    0   36   29   25
18   74   47   92   40   58    0   36   29   25
18   74   47   0    40   58   92   36   29   25
18   74   47   0    25   58   92   36   29   40
18   74   47   0    25   29   92   36   58   40
18   74   47   0    25   29   36   92   58   40
18   74   47   0    25   29   36   92   58   40
18   74   47   0    25   29   36   92   40   58


6. Show how the following numbers can be sorted using the INSERTION sort.
(Note: If you think the 0 gets immediately sorted into position, you are doing it wrong.
Go back and re-read how this sort works.)

74   92   18   47   40   58    0   36   29   25

7. Show how the following numbers can be sorted using the insertion sort:

    37   11   14   50   24    7   17   88   99    9

8. Explain what `min_pos` does in the selection sort.

9. Explain what `cur_pos` does in the selection sort.

10. Explain what `scan_pos` does in the selection sort.

11. Explain what `key_pos` and `key_value` are in the insertion sort.

12. Explain `scan_pos` in the insertion sort.

13. Look at the example sort program at the very end of this chapter:

https://learn.arcade.academy/en/latest/chapters/30_sorting/sorting.html


Modify the sorts to print the number of times the inside loop is run, and the number of times the outside
loop is run. Modify the program to work with a list of 100. Paste the code you used here.
Run the program and list the numbers you got here.
(DON'T FORGET TO INCLUDE THE RESULTS!)
Inside loop for selection sort should be about 5,000, and insertion sort 2,500.
Double-check if you don't get numbers close to these.

To turn in: Upload your .txt file.
Just drag it from PyCharm to the upload for the assignment.
(BUT WAIT! Make sure you include the results from #13, and not just the program.)

Alternatively, turn in a link to the github for the worksheet.